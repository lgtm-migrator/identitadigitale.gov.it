{"version":3,"sources":["webpack://identitadigitale/./src/components/Breadcrumb.js","webpack://identitadigitale/./src/components/TextChunk.js","webpack://identitadigitale/./src/components/hero/Hero.js","webpack://identitadigitale/./src/components/hero/HeroBody.js","webpack://identitadigitale/./src/components/hero/HeroTitle.js","webpack://identitadigitale/./src/templates/NewsTemplate.js"],"names":["Breadcrumb","currentPage","className","aria-label","labels","to","aria-hidden","aria-current","useStyles","createUseStyles","list","ul","paddingLeft","li","marginBottom","color","TextChunk","html","classes","dangerouslySetInnerHTML","__html","Hero","bgColor","xPadding","yPaddingXLScreen","children","heroClasses","classNames","containerClass","body","fontSize","HeroBody","HeroTitle","linkTo","title","Tag","markdownRemark","data","frontmatter","timeToRead","date","DateTime","description","subtitle","toFormat","tags","map","tag","key"],"mappings":"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","file":"component---src-templates-news-template-js-a1408cf139e8f8f826a7.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport labels from '../../contents/labels.yml';\n\nexport const Breadcrumb = ({ currentPage }) => (\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <nav aria-label={labels.ariaLabel.breadcrumb} className=\"breadcrumb-container\">\n          <ol className=\"breadcrumb ml-0 ml-sm-4 mt-4 mb-0 justify-content-center justify-content-sm-start\">\n            <li className=\"breadcrumb-item d-none d-sm-block\">\n              <Link className=\"font-weight-normal\" to=\"/\">\n                Home\n              </Link>\n              <span aria-hidden=\"true\" className=\"separator\">\n                /\n              </span>\n            </li>\n            <li aria-current=\"page\" className=\"breadcrumb-item active\">\n              <span className=\"font-weight-semibold\">{currentPage}</span>\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  </div>\n);\n\nBreadcrumb.propTypes = {\n  currentPage: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    '@global': {\n      ul: {\n        paddingLeft: '24px',\n      },\n      li: {\n        marginBottom: '16px',\n      },\n      'li::marker': {\n        color: 'var(--primary)',\n      },\n    },\n  },\n});\n\nexport const TextChunk = ({ html }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"row align-items-center my-2\">\n      <div className={`col-12 col-lg-7 m-auto ${classes.list}`} dangerouslySetInnerHTML={{ __html: html }}></div>\n    </div>\n  );\n};\n\nTextChunk.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Hero = ({ bgColor = '', xPadding = true, yPaddingXLScreen = true, children }) => {\n  const heroClasses = classNames('py-5', {\n    'bg-primary': bgColor === 'primary',\n    'lightgrey-bg-a2': bgColor === 'light',\n  });\n  const containerClass = classNames('container', {\n    'py-xl-5': yPaddingXLScreen,\n    'px-3 px-md-0': xPadding,\n  });\n  return (\n    <div className={heroClasses}>\n      <div className={containerClass}>{children}</div>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  bgColor: PropTypes.oneOf(['primary', 'light']),\n  xPadding: PropTypes.bool,\n  yPaddingXLScreen: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  body: {\n    fontSize: '1.3rem',\n  },\n});\n\nexport const HeroBody = ({ html }) => {\n  const classes = useStyles();\n  return <div className={classes.body} dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nHeroBody.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nexport const HeroTitle = ({\n  linkTo = null,\n  title,\n  className = \"\",\n  Tag = \"h3\",\n}) => (\n  <Tag className=\"h2 mb-4\">\n    {linkTo ? (\n      <Link to={linkTo} className={`text-decoration-none ${className}`}>\n        {title}\n      </Link>\n    ) : (\n      <span className={className}>{title}</span>\n    )}\n  </Tag>\n);\n\nHeroTitle.propTypes = {\n  className: PropTypes.string,\n  linkTo: PropTypes.string,\n  Tag: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { DateTime } from 'luxon';\nimport { TextChunk } from '../components/TextChunk.js';\nimport { HeroTitle } from '../components/hero/HeroTitle.js';\nimport { HeroBody } from '../components/hero/HeroBody.js';\nimport { Hero } from '../components/hero/Hero.js';\nimport { Breadcrumb } from '../components/Breadcrumb.js';\nimport labels from '../../contents/labels.yml';\nimport { SEO } from '../components/SEO.js';\n\nconst NewsTemplate = ({ data }) => {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html, timeToRead } = markdownRemark;\n  const date = DateTime.fromISO(frontmatter.date);\n  return (\n    <>\n      <SEO title={`${frontmatter.title} - Cloud Italia`} description={frontmatter.subtitle} />\n      {/* Quick fix to render a multiple levels breadcrumb without the navigable level 'notizie' */}\n      <Breadcrumb currentPage={`notizie / ${frontmatter.title}`} />\n      <Hero yPaddingXLScreen={false}>\n        <div className=\"row\">\n          <div className=\"offset-lg-1 col-lg-6 mt-4 mt-lg-0\">\n            <div className=\"\">\n              <HeroTitle title={frontmatter.title} className=\"text-info\" Tag=\"h1\" />\n              <HeroBody html={frontmatter.subtitle} />\n              <div className=\"row align-items-center mt-4\">\n                <div className=\"col-lg-6\">\n                  <div className=\"h6 text-uppercase\">{labels.date}</div>\n                  <div>{date.toFormat('LLL dd, yyyy')}</div>\n                </div>\n                <div className=\"col-lg-6 mt-4 mt-lg-0\">\n                  <div className=\"h6 text-uppercase\">{labels.timeToRead}</div>\n                  <div>\n                    {timeToRead} {labels.minutes}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"offset-lg-1 col-lg-4 mt-4 mt-lg-0\">\n            <div className=\"h6 text-uppercase\">{labels.topics}</div>\n            {frontmatter.tags.map((tag) => (\n              <div className=\"d-inline-block d-lg-block mr-4 mt-lg-2\" key={tag}>\n                {tag}\n              </div>\n            ))}\n          </div>\n        </div>\n      </Hero>\n\n      <hr />\n\n      <Hero yPaddingXLScreen={false}>\n        <TextChunk html={html} />\n      </Hero>\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date\n        title\n        subtitle\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport default NewsTemplate;\n\nNewsTemplate.propTypes = {\n  data: PropTypes.exact({\n    markdownRemark: PropTypes.exact({\n      frontmatter: PropTypes.exact({\n        date: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        tags: PropTypes.arrayOf(PropTypes.string),\n      }),\n      html: PropTypes.string.isRequired,\n      timeToRead: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n"],"sourceRoot":""}